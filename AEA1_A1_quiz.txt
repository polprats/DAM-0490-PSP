::Q1:: Què és una API?
{
    =Un conjunt de protocols que permeten que diferents components de programari es comuniquin i intercanviïn dades
    ~Una base de dades per emmagatzemar informació d’un servidor
    ~Una eina per dissenyar interfícies gràfiques
    ~Un llenguatge de programació
}

::Q2:: Quin element NO forma part d'una petició HTTP?
{
    =El sistema operatiu del servidor
    ~L'endpoint (URL) de l'API
    ~El mètode HTTP (com GET o POST)
    ~Paràmetres i encapçalaments
}

::Q3:: Quin enunciat descriu correctament el cicle petició-resposta d'una API?
{
    =El client envia una petició i el servidor retorna dades com a resposta
    ~El servidor envia la petició i el client processa les dades
    ~Els dos extrems envien dades simultàniament sense resposta
    ~No hi ha cap retorn de dades després d'enviar la petició
}

::Q4:: Quin principi defineix el model REST per a APIs?
{
    =Fa servir mètodes HTTP i URIs per identificar recursos
    ~Utilitza protocols propietaris per a cada API
    ~Només funciona amb aplicacions de codi tancat
    ~Envia totes les dades en format binari
}

::Q5:: Quin mètode HTTP s’utilitza per recuperar dades sense modificar-les i és segur i idempotent?
{
    =GET
    ~POST
    ~DELETE
    ~PATCH
}

::Q6:: Quin mètode HTTP crea recursos subordinats i NO és idempotent?
{
    =POST
    ~GET
    ~PUT
    ~DELETE
}

::Q7:: Quin mètode HTTP actualitza completament un recurs existent i és idempotent?
{
    =PUT
    ~DELETE
    ~GET
    ~PATCH
}

::Q8:: Què indiquen els codis d'estat 2xx en una resposta HTTP?
{
    =Que la petició s'ha rebut, entès i processat correctament
    ~Que cal prendre una acció addicional per completar-la
    ~Que el servidor no ha entès la petició
    ~Que la petició encara no s'ha processat
}

::Q9:: Quina categoria de codis d'estat indica errors del client?
{
    =4xx
    ~1xx
    ~2xx
    ~3xx
}

::Q10:: Què significa el codi d'estat 404?
{
    =Que el recurs sol·licitat no s'ha trobat
    ~Que s'ha creat un nou recurs
    ~Que el servidor ha redirigit permanentment la sol·licitud
    ~Que el servidor està encara processant la petició
}

::Q11:: Per què utilitzem eines de verificació com Postman o Thunder Client?
{
    =Per enviar peticions a serveis REST i comprovar les respostes
    ~Per substituir completament els servidors API
    ~Per encriptar dades a nivell de xarxa
    ~Per compilar codi JavaScript automàticament
}

::Q12:: En el diagrama d’ús de les eines de verificació, quin és l’ordre correcte de flux?
{
    =Desenvolupador → Eina → Servei API → Resposta
    ~Servei API → Desenvolupador → Eina → Resposta
    ~Eina → Desenvolupador → Servei API → Resposta
    ~Desenvolupador → Servei API → Eina → Resposta
}

::Q13:: Quin enunciat descriu millor Postman?
{
    =Client d’API amb interfície gràfica que permet crear i desar peticions
    ~Un framework per al desenvolupament de videojocs en 3D
    ~Un servei de bases de dades per a aplicacions web
    ~Una extensió del navegador per bloquejar publicitat
}

::Q14:: Quin pas és necessari per enviar una petició POST amb cos JSON a Postman?
{
    =Seleccionar el mètode POST i establir el cos com a Raw en format JSON
    ~Seleccionar el mètode GET i passar les dades com a paràmetres de consulta
    ~Activar l'opció “Binary” per al cos
    ~No es pot enviar cos JSON amb Postman
}

::Q15:: Quin avantatge ofereix Thunder Client?
{
    =És una extensió lleugera integrada a VS Code per realitzar proves REST
    ~Requereix instal·lar un IDE separat per funcionar
    ~Només funciona en conjunció amb cURL
    ~És només una eina de línia de comandes
}

::Q16:: Quina característica NO és pròpia de Thunder Client?
{
    =Permetre jugar a videojocs en línia
    ~Gestionar col·leccions i variables d'entorn
    ~Ofereix Git sync i emmagatzematge local
    ~Disposar d'una CLI per integració contínua
}

::Q17:: Quin enunciat descriu millor l’eina curl?
{
    =Eina de línia de comandes disponible a totes les plataformes per transferir dades amb diversos protocols
    ~Només es pot executar dins de Postman
    ~És una API REST per emmagatzemar fitxers
    ~Serveix exclusivament per enviar correu electrònic
}

::Q18:: Com s’especifica el mètode HTTP a curl?
{
    =Amb l’opció -X seguida del mètode, per exemple -X GET
    ~Amb l’opció --method seguida de l’URL
    ~No cal especificar mètode perquè curl ho detecta automàticament
    ~Utilitzant l’opció -d
}

::Q19:: Quina opció de curl s’utilitza per afegir encapçalaments (headers)?
{
    =L’opció -H
    ~L’opció -X
    ~L’opció -L
    ~L’opció -o
}

::Q20:: Quina és una manera d’avaluar la concurrència d’un servei Express?
{
    =Executar scripts o eines com Postman Runner o Apache Bench per enviar múltiples peticions simultànies
    ~Executar una sola petició GET amb Postman
    ~Modificar l’API perquè respongui més lentament
    ~Deshabilitar totes les rutes HTTP
}